// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.TargetFractal = (function(_super) {
    __extends(_Class, _super);

    _Class.prototype.defaults = {
      zoom: 1
    };

    function _Class(canvas_size, active_fractal) {
      this.getCanvasSectionCoordinates = __bind(this.getCanvasSectionCoordinates, this);
      this.getCanvasSection = __bind(this.getCanvasSection, this);
      this.zoomTo = __bind(this.zoomTo, this);
      Backbone.Model.apply(this);
      this.SECTION_ROW_COUNT = active_fractal.SECTION_ROW_COUNT;
      this.SECTION_COLUMN_COUNT = active_fractal.SECTION_COLUMN_COUNT;
      this.CANVAS_PIXEL_WIDTH = active_fractal.CANVAS_PIXEL_WIDTH;
      this.CANVAS_PIXEL_HEIGHT = active_fractal.CANVAS_PIXEL_HEIGHT;
      this.x_section_size = this.CANVAS_PIXEL_WIDTH / this.SECTION_COLUMN_COUNT;
      this.y_section_size = this.CANVAS_PIXEL_HEIGHT / this.SECTION_ROW_COUNT;
      this.fractal_manager = new window.FractalManager(canvas_size);
      this.fractal_manager_view = new window.FractalManagerView(this.fractal_manager, '#target_mandelbrot');
    }

    _Class.prototype.zoomTo = function(top_left, new_zoom) {
      this.fractal_manager.setCanvas(top_left, new_zoom, this.get('zoom'), this.CANVAS_PIXEL_WIDTH, this.CANVAS_PIXEL_HEIGHT);
      return this.set('zoom', new_zoom);
    };

    _Class.prototype.getCanvasSection = function(coordinate) {
      var x_section, y_section;
      x_section = Math.floor(coordinate.x / this.x_section_size);
      y_section = Math.floor(coordinate.y / this.y_section_size);
      return {
        x: x_section,
        y: y_section
      };
    };

    _Class.prototype.getCanvasSectionCoordinates = function(section) {
      return {
        top_left: {
          x: Math.ceil(section.x * this.x_section_size),
          y: Math.ceil(section.y * this.y_section_size)
        },
        bottom_right: {
          x: Math.ceil((section.x + 1) * this.x_section_size),
          y: Math.ceil((section.y + 1) * this.y_section_size)
        }
      };
    };

    return _Class;

  })(Backbone.Model);

  window.TargetFractalView = (function(_super) {
    __extends(_Class, _super);

    _Class.prototype.template = _.template("<div id='target-canvas'> <canvas id='target_mandelbrot' width='<%= CANVAS_PIXEL_WIDTH %>' height='<%= CANVAS_PIXEL_HEIGHT %>'> </canvas> <div id='target-zoom' class='zoom'><%= zoom %>x</div> </div>");

    function _Class(options) {
      if (options == null) {
        options = {};
      }
      this.render = __bind(this.render, this);
      this.model = options.model, this.classname = options.classname;
      this.$el = $('#target-fractal');
      this.render();
    }

    _Class.prototype.initialize = function() {
      return this.model.on('change', this.render, this);
    };

    _Class.prototype.render = function() {
      return this.$el.html(this.template({
        'zoom': this.model.get('zoom'),
        'CANVAS_PIXEL_WIDTH': this.model.CANVAS_PIXEL_WIDTH,
        'CANVAS_PIXEL_HEIGHT': this.model.CANVAS_PIXEL_HEIGHT
      }));
    };

    _Class.prototype.drawFractal = function() {
      return this.model.fractal_manager_view.render();
    };

    return _Class;

  })(Backbone.View);

}).call(this);
