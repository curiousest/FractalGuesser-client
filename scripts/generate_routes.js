// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.RouteGenerator = (function() {
    var bad_routes, dummy_canvas, fractal_manager, has_colored_pixel, pixels_checked;

    fractal_manager = null;

    dummy_canvas = null;

    bad_routes = null;

    pixels_checked = 0;

    has_colored_pixel = false;

    function _Class() {
      this.checkRoutes = __bind(this.checkRoutes, this);
      this.pickColorHSV1_CheckColor = __bind(this.pickColorHSV1_CheckColor, this);
      var canvas_attribute;
      this.max_depth = 4;
      this.fractal_manager = new window.FractalManager(MANDELBROT_CANVAS_SIZE, 400, 285);
      this.bad_routes = {
        max_depth: this.max_depth
      };
      this.dummy_canvas = document.createElement('canvas');
      canvas_attribute = document.createAttribute("width");
      canvas_attribute.value = "400";
      this.dummy_canvas.setAttributeNode(canvas_attribute);
      canvas_attribute = document.createAttribute("height");
      canvas_attribute.value = "285";
      this.dummy_canvas.setAttributeNode(canvas_attribute);
    }

    _Class.prototype.pickColorHSV1_CheckColor = function(steps, n, Tr, Ti) {
      var c, v;
      this.pixels_checked = this.pixels_checked + 1;
      if (n === steps) {
        return interiorColor;
      }
      v = smoothColor(steps, n, Tr, Ti);
      c = hsv_to_rgb(360.0 * v / steps, 1.0, 1.0);
      if (c[0] !== 255 || c[2] !== 0) {
        this.has_colored_pixel = true;
      }
      c.push(255);
      return c;
    };

    _Class.prototype.checkRoutes = function(current_route, depth) {
      var x_section, y_section, _i, _results;
      if (depth > this.max_depth) {
        return;
      }
      this.pixels_checked = 0;
      this.has_colored_pixel = false;
      draw(this.dummy_canvas, {
        x: this.fractal_manager.get('top_left').x,
        y: this.fractal_manager.get('bottom_right').x
      }, {
        x: this.fractal_manager.get('top_left').y,
        y: this.fractal_manager.get('bottom_right').y
      }, this.pickColorHSV1_CheckColor, mandelbrotAlgorithm);
      if (!this.has_colored_pixel) {
        return;
      }
      _results = [];
      for (x_section = _i = 0; _i <= 3; x_section = ++_i) {
        current_route[x_section] = {};
        _results.push((function() {
          var _j, _results1;
          _results1 = [];
          for (y_section = _j = 0; _j <= 3; y_section = ++_j) {
            current_route[x_section][y_section] = {};
            this.fractal_manager.setCanvas({
              x: x_section,
              y: y_section
            }, Math.pow(4, depth + 1));
            this.checkRoutes(current_route[x_section][y_section], depth + 1);
            _results1.push(this.fractal_manager.previousCanvas());
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    return _Class;

  })();

  $(document).ready(function() {
    var route_generator, str;
    route_generator = new window.RouteGenerator;
    route_generator.checkRoutes(route_generator.bad_routes, 0);
    console.log(route_generator.bad_routes);
    str = JSON.stringify(route_generator.bad_routes);
    return console.log(str);
  });

}).call(this);
